// Vercel Serverless Function –¥–ª—è create-checkout-session API
import Stripe from 'stripe';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

export default async function handler(req, res) {
  console.log('üîç Payment request received:', {
    method: req.method,
    body: req.body,
    headers: req.headers
  });

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ - —Ä–∞–∑—Ä–µ—à–∞–µ–º –æ–±–∞ –¥–æ–º–µ–Ω–∞
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
  res.setHeader('Access-Control-Allow-Credentials', 'true');

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º preflight OPTIONS –∑–∞–ø—Ä–æ—Å
  if (req.method === 'OPTIONS') {
    console.log('‚úÖ Handling OPTIONS preflight');
    res.status(200).end();
    return;
  }

  if (req.method !== 'POST') {
    console.log('‚ùå Method not allowed:', req.method);
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    console.log('üîë Environment check:', {
      hasStripeKey: !!process.env.STRIPE_SECRET_KEY,
      hasPriceId: !!process.env.STRIPE_PRICE_ID,
      corsOrigin: process.env.CORS_ORIGIN
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    if (!process.env.STRIPE_SECRET_KEY) {
      console.error('‚ùå Missing STRIPE_SECRET_KEY');
      return res.status(500).json({ error: 'Stripe configuration missing' });
    }

    if (!process.env.STRIPE_PRICE_ID) {
      console.error('‚ùå Missing STRIPE_PRICE_ID');
      return res.status(500).json({ error: 'Stripe price configuration missing' });
    }

    // Frontend –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é, –Ω–µ –≤ formData –æ–±—ä–µ–∫—Ç–µ
    const formData = req.body;
    console.log('üìù Form data received:', formData);

    const session = await stripe.checkout.sessions.create({
      payment_method_types: ['card'],
      line_items: [
        {
          price: process.env.STRIPE_PRICE_ID,
          quantity: 1,
        },
      ],
      mode: 'payment',
      success_url: `https://fliptrip-frontend.vercel.app/itinerary?city=${formData.city}&audience=${formData.audience}&interests=${Array.isArray(formData.interests) ? formData.interests.join(',') : formData.interests}&date=${formData.date}&budget=${formData.budget}&session_id={CHECKOUT_SESSION_ID}`,
      cancel_url: `https://fliptrip-frontend.vercel.app/payment`,
      metadata: {
        city: formData.city,
        audience: formData.audience,
        interests: JSON.stringify(formData.interests),
        date: formData.date,
        budget: formData.budget
      }
    });

    res.status(200).json({ url: session.url });

  } catch (error) {
    console.error('Stripe Error:', error);
    res.status(500).json({ 
      error: 'Internal Server Error',
      message: error.message 
    });
  }
};