/**
 * Title Generator Entity
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
 * –ù–ï –¢–†–û–ì–ê–¢–¨ –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!
 */

const { generateTitle, generateSubtitle } = require('../textGenerator');

class TitleGenerator {
  constructor() {
    this.cache = new Map();
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞
   * @param {Object} filterParams - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞
   * @returns {Object} - { title, subtitle }
   */
  async generateTitles(filterParams) {
    const cacheKey = this.getCacheKey(filterParams);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if (this.cache.has(cacheKey)) {
      console.log('üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏');
      return this.cache.get(cacheKey);
    }

    console.log('ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —á–µ—Ä–µ–∑ OpenAI –¥–ª—è:', filterParams);

    try {
      const title = await generateTitle(filterParams.city, filterParams.interests, filterParams.audience);
      const subtitle = await generateSubtitle(filterParams.city, filterParams.interests, filterParams.audience, filterParams.date);
      
      console.log('‚úÖ OpenAI –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã:', { title, subtitle });
      
      const result = { title, subtitle };
      
      // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      this.cache.set(cacheKey, result);
      
      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —á–µ—Ä–µ–∑ OpenAI:', error);
      
      // –í–ê–ñ–ù–û: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º fallback –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–æ–º–ø—Ç–∞–º, –∞ –Ω–µ —Å—Ç–∞—Ç–∏—á–Ω—ã–µ
      const fallbackTitle = this.generateFallbackTitleFromPrompt(filterParams);
      const fallbackSubtitle = this.generateFallbackSubtitleFromPrompt(filterParams);
      
      console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–æ–º–ø—Ç–∞–º:', { fallbackTitle, fallbackSubtitle });
      
      return { 
        title: fallbackTitle, 
        subtitle: fallbackSubtitle 
      };
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
   */
  async generateBrightTitle(city, interests, audience) {
    const filterParams = { city, interests, audience };
    const titles = await this.generateTitles(filterParams);
    return titles.title;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
   */
  async generateBrightSubtitle(city, interests, audience) {
    const filterParams = { city, interests, audience };
    const titles = await this.generateTitles(filterParams);
    return titles.subtitle;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª—é—á –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  getCacheKey(filterParams) {
    return `${filterParams.city}_${filterParams.audience}_${filterParams.interests.join('_')}_${filterParams.budget}`;
  }

  /**
   * Fallback –∑–∞–≥–æ–ª–æ–≤–∫–∏ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   */
  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç fallback –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–æ–º–ø—Ç–∞–º –∏–∑ textGenerator.js
   */
  generateFallbackTitleFromPrompt(filterParams) {
    const { city, interests, audience } = filterParams;
    
    // –°–ª–µ–¥—É–µ–º –ø—Ä–∞–≤–∏–ª–∞–º –ø—Ä–æ–º–ø—Ç–∞: –∫–æ—Ä–æ—Ç–∫–∏–π, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π, –≥–æ—Ä–æ–¥ + –∏–Ω—Ç–µ—Ä–µ—Å—ã
    const interestMap = {
      'swimming': 'Aquatic adventures',
      'zoo': 'Wildlife discoveries', 
      'playground': 'Family fun',
      'adventure': 'Adventures',
      'culture': 'Cultural treasures',
      'food': 'Culinary journey',
      'romantic': 'Romantic escapes',
      'art': 'Artistic discoveries',
      'music': 'Musical journey',
      'nature': 'Nature exploration',
      'history': 'Historical wonders',
      'shopping': 'Shopping adventures',
      'nightlife': 'Night discoveries',
      'relaxation': 'Peaceful retreat',
      'wellness': 'Wellness journey',
      'architecture': 'Architectural marvels',
      'photography': 'Photo adventures',
      'local': 'Local discoveries',
      'sports': 'Active adventures',
      'outdoor': 'Outdoor exploration',
      'indoor': 'Indoor discoveries'
    };
    
    const mainInterest = interests?.[0] || 'exploration';
    const interestText = interestMap[mainInterest] || mainInterest;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª–∞ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–∑ –ø—Ä–æ–º–ø—Ç–∞
    return `${interestText} in ${city}`;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç fallback –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–æ–º–ø—Ç–∞–º –∏–∑ textGenerator.js
   */
  generateFallbackSubtitleFromPrompt(filterParams) {
    const { city, interests, audience, date } = filterParams;
    
    // –°–ª–µ–¥—É–µ–º –ø—Ä–∞–≤–∏–ª–∞–º –ø—Ä–æ–º–ø—Ç–∞: –¥–∞—Ç–∞ + –∞—É–¥–∏—Ç–æ—Ä–∏—è + –∏–Ω—Ç–µ—Ä–µ—Å—ã + –ø–æ—ç—Ç–∏—á–Ω–æ (3-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π)
    const formattedDate = new Date(date).toLocaleDateString('en-US', { 
      month: 'long', 
      day: 'numeric',
      year: 'numeric'
    });
    
    const audienceMap = {
      'him': 'for him',
      'her': 'for her', 
      'couples': 'for couples',
      'kids': 'for children'
    };
    
    const audienceText = audienceMap[audience] || 'for you';
    const mainInterest = interests?.[0] || 'exploration';
    
    // –°–æ–∑–¥–∞–µ–º –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Å—Ç–∏–ª–µ —Ç—Ä–µ–π–ª–µ—Ä–∞ –∫ —Ñ–∏–ª—å–º—É
    const subtitleTemplates = {
      'swimming': `${formattedDate} ${audienceText} - dive into aquatic adventures in the heart of ${city}. Splash through crystal waters, discover hidden pools, and let the rhythm of the waves guide your perfect day. An unforgettable journey of water and wonder awaits.`,
      'zoo': `${formattedDate} ${audienceText} - embark on a wildlife adventure in ${city}. Meet amazing creatures, discover nature's secrets, and create magical memories with every step. A day where wonder meets wild in the most beautiful way.`,
      'romantic': `${formattedDate} ${audienceText} - fall in love with ${city} all over again. Stroll through enchanting streets, share intimate moments, and let the city's magic weave around you. Romance, passion, and unforgettable memories await.`,
      'culture': `${formattedDate} ${audienceText} - immerse yourself in the cultural heart of ${city}. Discover artistic treasures, explore historic wonders, and let creativity inspire your soul. A journey through time and culture unfolds.`,
      'adventure': `${formattedDate} ${audienceText} - unleash your adventurous spirit in ${city}. Conquer new heights, explore hidden paths, and embrace the thrill of discovery. An epic day of excitement and exploration begins.`
    };
    
    return subtitleTemplates[mainInterest] || `${formattedDate} ${audienceText} - discover the magic of ${city}. Experience authentic moments, create lasting memories, and let the city's unique charm captivate your heart. An extraordinary adventure awaits your arrival.`;
  }

  getFallbackTitles(filterParams) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–º–ø—Ç–∞–º
    return {
      title: this.generateFallbackTitleFromPrompt(filterParams),
      subtitle: this.generateFallbackSubtitleFromPrompt(filterParams)
    };
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –∫—ç—à
   */
  clearCache() {
    this.cache.clear();
  }
}

module.exports = TitleGenerator;
